{"ast":null,"code":"import _objectSpread from \"/Users/simon/Documents/Development/tutorials/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/simon/Documents/Development/tutorials/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/simon/Documents/Development/tutorials/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/simon/Documents/Development/tutorials/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/simon/Documents/Development/tutorials/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/simon/Documents/Development/tutorials/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/simon/Documents/Development/tutorials/catch-of-the-day/src/components/App.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      //1. Take a copy of exisiting state\n      var fishes = _objectSpread({}, _this.state.fishes); //2. Add new fish to fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; //3. Set new fishes object to state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.updateFish = function (key, updatedFish) {\n      //take a copy of current state fish\n      var fishes = _objectSpread({}, _this.state.fishes);\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // 1. take a copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. add to the order, or update the number in order\n\n\n      order[key] = order[key] + 1 || 1; // 3. set state to update our state object\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params; // first reinstate the local storage\n\n      var localStorageRef = localStorage.getItem(params.storeId);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: 'fishes'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Header, {\n        tagline: \"Fresh Seafood Market\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"fishes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        });\n      }))), React.createElement(Order, {\n        fishes: this.state.fishes,\n        order: this.state.order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Inventory, {\n        addFish: this.addFish,\n        loadSampleFishes: this.loadSampleFishes,\n        fishes: this.state.fishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/simon/Documents/Development/tutorials/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","loadSampleFishes","addToOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;;IAEMC,G;;;;;;;;;;;;;;;;;UACLC,K,GAAQ;AACPC,MAAAA,MAAM,EAAE,EADD;AAEPC,MAAAA,KAAK,EAAE;AAFA,K;;UA6BRC,O,GAAU,UAAAC,IAAI,EAAI;AACjB;AACA,UAAMH,MAAM,qBAAQ,MAAKD,KAAL,CAAWC,MAAnB,CAAZ,CAFiB,CAGjB;;;AACAA,MAAAA,MAAM,eAAQI,IAAI,CAACC,GAAL,EAAR,EAAN,GAA8BF,IAA9B,CAJiB,CAKjB;;AACA,YAAKG,QAAL,CAAc;AACbN,QAAAA,MAAM,EAAEA;AADK,OAAd;AAGA,K;;UAEDO,U,GAAa,UAACC,GAAD,EAAMC,WAAN,EAAsB;AAClC;AACA,UAAMT,MAAM,qBAAQ,MAAKD,KAAL,CAAWC,MAAnB,CAAZ;AACA,K;;UAEDU,gB,GAAmB,YAAM;AACxB,YAAKJ,QAAL,CAAc;AACbN,QAAAA,MAAM,EAAEL;AADK,OAAd;AAGA,K;;UAEDgB,U,GAAa,UAAAH,GAAG,EAAI;AACnB;AACA,UAAMP,KAAK,qBAAQ,MAAKF,KAAL,CAAWE,KAAnB,CAAX,CAFmB,CAGnB;;;AACAA,MAAAA,KAAK,CAACO,GAAD,CAAL,GAAaP,KAAK,CAACO,GAAD,CAAL,GAAa,CAAb,IAAkB,CAA/B,CAJmB,CAKnB;;AACA,YAAKF,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAALA;AAAF,OAAd;AACA,K;;;;;;;wCArDmB;AAAA,UACXW,MADW,GACA,KAAKC,KAAL,CAAWC,KADX,CACXF,MADW,EAEnB;;AACA,UAAMG,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqBL,MAAM,CAACM,OAA5B,CAAxB;;AACA,UAAIH,eAAJ,EAAqB;AACpB,aAAKT,QAAL,CAAc;AAAEL,UAAAA,KAAK,EAAEkB,IAAI,CAACC,KAAL,CAAWL,eAAX;AAAT,SAAd;AACA;;AACD,WAAKM,GAAL,GAAWxB,IAAI,CAACyB,SAAL,WAAkBV,MAAM,CAACM,OAAzB,cAA2C;AACrDK,QAAAA,OAAO,EAAE,IAD4C;AAErDxB,QAAAA,KAAK,EAAE;AAF8C,OAA3C,CAAX;AAIA;;;yCAEoB;AACpBiB,MAAAA,YAAY,CAACQ,OAAb,CACC,KAAKX,KAAL,CAAWC,KAAX,CAAiBF,MAAjB,CAAwBM,OADzB,EAECC,IAAI,CAACM,SAAL,CAAe,KAAK1B,KAAL,CAAWE,KAA1B,CAFD;AAIA;;;2CAEsB;AACtBJ,MAAAA,IAAI,CAAC6B,aAAL,CAAmB,KAAKL,GAAxB;AACA;;;6BAiCQ;AAAA;;AACR,aACC;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAEC;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEM,MAAM,CAACC,IAAP,CAAY,KAAK7B,KAAL,CAAWC,MAAvB,EAA+B6B,GAA/B,CAAmC,UAAArB,GAAG;AAAA,eACtC,oBAAC,IAAD;AACC,UAAA,GAAG,EAAEA,GADN;AAEC,UAAA,KAAK,EAAEA,GAFR;AAGC,UAAA,OAAO,EAAE,MAAI,CAACT,KAAL,CAAWC,MAAX,CAAkBQ,GAAlB,CAHV;AAIC,UAAA,UAAU,EAAE,MAAI,CAACG,UAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADsC;AAAA,OAAtC,CADF,CAFD,CADD,EAcC,oBAAC,KAAD;AAAO,QAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWC,MAA1B;AAAkC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdD,EAeC,oBAAC,SAAD;AACC,QAAA,OAAO,EAAE,KAAKC,OADf;AAEC,QAAA,gBAAgB,EAAE,KAAKQ,gBAFxB;AAGC,QAAA,MAAM,EAAE,KAAKX,KAAL,CAAWC,MAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfD,CADD;AAuBA;;;;EArFgBT,KAAK,CAACuC,S;;AAwFxB,eAAehC,GAAf","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n\tstate = {\n\t\tfishes: {},\n\t\torder: {},\n\t};\n\n\tcomponentDidMount() {\n\t\tconst { params } = this.props.match;\n\t\t// first reinstate the local storage\n\t\tconst localStorageRef = localStorage.getItem(params.storeId);\n\t\tif (localStorageRef) {\n\t\t\tthis.setState({ order: JSON.parse(localStorageRef) });\n\t\t}\n\t\tthis.ref = base.syncState(`${params.storeId}/fishes`, {\n\t\t\tcontext: this,\n\t\t\tstate: 'fishes',\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tlocalStorage.setItem(\n\t\t\tthis.props.match.params.storeId,\n\t\t\tJSON.stringify(this.state.order),\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tbase.removeBinding(this.ref);\n\t}\n\n\taddFish = fish => {\n\t\t//1. Take a copy of exisiting state\n\t\tconst fishes = { ...this.state.fishes };\n\t\t//2. Add new fish to fishes variable\n\t\tfishes[`fish${Date.now()}`] = fish;\n\t\t//3. Set new fishes object to state\n\t\tthis.setState({\n\t\t\tfishes: fishes,\n\t\t});\n\t};\n\n\tupdateFish = (key, updatedFish) => {\n\t\t//take a copy of current state fish\n\t\tconst fishes = { ...this.state.fishes };\n\t};\n\n\tloadSampleFishes = () => {\n\t\tthis.setState({\n\t\t\tfishes: sampleFishes,\n\t\t});\n\t};\n\n\taddToOrder = key => {\n\t\t// 1. take a copy of state\n\t\tconst order = { ...this.state.order };\n\t\t// 2. add to the order, or update the number in order\n\t\torder[key] = order[key] + 1 || 1;\n\t\t// 3. set state to update our state object\n\t\tthis.setState({ order });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"catch-of-the-day\">\n\t\t\t\t<div className=\"menu\">\n\t\t\t\t\t<Header tagline=\"Fresh Seafood Market\" />\n\t\t\t\t\t<ul className=\"fishes\">\n\t\t\t\t\t\t{Object.keys(this.state.fishes).map(key => (\n\t\t\t\t\t\t\t<Fish\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tindex={key}\n\t\t\t\t\t\t\t\tdetails={this.state.fishes[key]}\n\t\t\t\t\t\t\t\taddToOrder={this.addToOrder}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t\t<Order fishes={this.state.fishes} order={this.state.order} />\n\t\t\t\t<Inventory\n\t\t\t\t\taddFish={this.addFish}\n\t\t\t\t\tloadSampleFishes={this.loadSampleFishes}\n\t\t\t\t\tfishes={this.state.fishes}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}